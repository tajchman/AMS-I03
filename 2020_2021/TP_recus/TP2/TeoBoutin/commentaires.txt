Fin Grain

1. Appeler plutot MPI_Init_thread (main.cxx ligne 55)

Pas d'autre remarques

Coarse Grain:

L'algorithme est bon.

1. Pourquoi avez-vous mis en commentaire l'appel de MPI_Init_thread ?
   Il y a eu un probleme ? Normalement, MPI_Init_thread est obligatoire.

   En tout cas, si vous n'initialisez pas la variable mpi_thread, il ne faut pas l'afficher ou utiliser sa valeur.

2. De toute facon, vous n'aviez pas choisi le bon niveau de compatibilité MPI-OpenMP.
   Il y a une barriere MPI (main.cxx ligne 89) dans un pragma single et vous appelez C.synchronize() (qui fait des appels MPI) aussi dans un pragma omp single (scheme.cxx ligne 112) : donc on ne sait pas quel thread appellera MPI (mais on sait que 2 threads différents n'appeleront pas en meme temps MPI).

   Donc il faut MPI_THREAD_SERIALIZED

   Ou alors si vous gardez MPI_THREAD_FUNNELED, il faut mettre la barriere MPI et appeler synchronize dans un pragma master.

3. Les pragma OpenMP dans main.cxx sont correctes, par contre, on peut réduire le nombre de régions //, par exemple fusionner les 2 pragma single (main.cxx, ligne 100 et ligne 109), qui permet d'économiser une barrière OpenMP.